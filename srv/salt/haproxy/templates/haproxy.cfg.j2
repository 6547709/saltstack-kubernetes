{%- from tpldir ~ "/map.jinja" import haproxy with context -%}

{%- set masters = [] -%}
{%- for key, value in salt["mine.get"](tgt="role:master", fun="network.get_hostname", tgt_type="grain")|dictsort(false, 'value') -%}
  {%- do masters.append(value) -%}
{%- endfor -%}

# HAProxy configuration
#
# **** DO NOT EDIT THIS FILE ****
#
# This file is managed by Salt.
# Any changes will be overwritten.

#------------------
# Global settings
#------------------
global
    log /dev/log    local0
    log /dev/log    local1 notice
    user haproxy
    group haproxy
    ssl-default-bind-ciphers    ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384
    ssl-default-bind-options    no-sslv3 no-tlsv10 no-tlsv11

#------------------
# common defaults that all the 'listen' and 'backend' sections will
# use- if not designated in their block
#------------------
defaults
    log global
    timeout tunnel        3600s
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check 10s
    stats       enable
    stats uri   admin?stats

#------------------
# listen instances
#------------------
listen stats
    bind 0.0.0.0:58080
    mode http
    stats enable
    stats uri /admin?stats



#------------------
# frontend instances
#------------------
frontend kubernetes-master
    bind        *:{{ haproxy.kubernetes_api_port }}
    mode tcp
    default_backend kube-apiserver



#------------------
# backend instances
#------------------
backend kube-apiserver
    mode tcp
    balance roundrobin
    timeout server 300000
    default-server downinter 5s  fall 2  inter 10s  maxconn 250  maxqueue 256  rise 2  slowstart 60s weight 100
    {%- for server, addrs in salt['mine.get'](tgt='role:master', fun='network.ip_addrs', tgt_type='grain').items() %}
    server {{ server }} {{ addrs[0] }}:{{ haproxy.kubernetes_api_port }} check
    {%- endfor %}