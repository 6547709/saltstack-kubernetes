{%- from tpldir ~ "/map.jinja" import envoy with context -%}

{%- set masters = [] -%}
{%- for key, value in salt["mine.get"](tgt="role:master", fun="network.get_hostname", tgt_type="grain")|dictsort(false, 'value') -%}
  {%- do masters.append(value) -%}
{%- endfor -%}

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: {{ envoy.kubernetes_api_port }}

    filter_chains:
    - filters:
      - name: envoy.tcp_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: tcp_kube-apiserver
          cluster: kube-apiserver
          # access_log:
          #   - name: envoy.file_access_log
          #     config:
          #       path: /dev/stdout

  clusters:
  - name: kube-apiserver
    connect_timeout: 0.25s
    type: STRICT_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    hosts: [
        {%- for server, addrs in salt['mine.get'](tgt='role:master', fun='network.ip_addrs', tgt_type='grain').items() %}
        { socket_address: { address: {{ addrs[0] }}, port_value: {{ envoy.kubernetes_api_port }} } },
        {%- endfor %}
    ]

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: {{ envoy.admin_port }}