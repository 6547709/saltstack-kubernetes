# -*- coding: utf-8 -*-
# vim: ft=jinja

{#- Get the `tplroot` from `tpldir` #}
{% from tpldir ~ "/map.jinja" import kube_prometheus with context %}

apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-pushgateway
  namespace: monitoring
  labels:
    app: prometheus-pushgateway
---
# Source: prometheus-pushgateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-pushgateway
  namespace: monitoring
  annotations:
    {}
  labels:
    app: prometheus-pushgateway
spec:
  type: ClusterIP
  ports:
    - port: 9091
      targetPort: 9091
      protocol: TCP
      name: http
  selector:
    app: prometheus-pushgateway
    release: pubsh-gateway
---
# Source: prometheus-pushgateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-pushgateway
  namespace: monitoring
  labels:
    app: prometheus-pushgateway
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: prometheus-pushgateway
      release: pubsh-gateway
  template:
    metadata:
      labels:
        app: prometheus-pushgateway
        release: pubsh-gateway
      annotations:
        {}
    spec:
      serviceAccountName: prometheus-pushgateway
      containers:
        - name: pushgateway
          image: {{ kube_prometheus.pushgateway_image }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 9091
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9091
            initialDelaySeconds: 10
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9091
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources:
            {}
---
# Source: prometheus-pushgateway/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-pushgateway
  namespace: monitoring
  labels:
    app: prometheus-pushgateway
spec:
  endpoints:
  - port: http
    path: /metrics
    honorLabels: true
  namespaceSelector:
    matchNames:
      - monitoring
  selector:
    matchLabels:
      app: prometheus-pushgateway