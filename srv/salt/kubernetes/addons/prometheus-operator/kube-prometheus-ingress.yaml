{%- set public_domain = pillar['public-domain'] -%}
{%- from "kubernetes/map.jinja" import common with context -%}

{%- if common.addons.get('ingress_traefik', {'enabled': False}).enabled %}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
 name: prometheus-dashboard
 namespace: monitoring
 annotations:
   kubernetes.io/ingress.class: traefik
   # ingress.kubernetes.io/auth-type: "basic"
   # ingress.kubernetes.io/auth-secret: "mysecret"
spec:
 rules:
 - host: prometheus.{{ public_domain }}
   http:
     paths:
     - backend:
         serviceName: prometheus-k8s
         servicePort: 9090
 - host: alert.{{ public_domain }}
   http:
     paths:
     - backend:
         serviceName: alertmanager-main
         servicePort: 9093
 - host: grafana.{{ public_domain }}
   http:
     paths:
     - backend:
         serviceName: grafana
         servicePort: 3000
---
{% endif %}

{%- if common.addons.get('ingress_istio', {'enabled': False}).enabled -%}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: kube-prometheus
  namespace: monitoring
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - prometheus.{{ public_domain }}
    - grafana.{{ public_domain }}
    - alertmanager.{{ public_domain }}
    port:
      name: https
      number: 443
      protocol: HTTPS
    tls:
      mode: SIMPLE
      privateKey: /etc/istio/ingressgateway-certs/tls.key
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kube-prometheus
  namespace: monitoring
spec:
  gateways:
  - prometheus
  hosts:
  - prometheus.{{ public_domain }}
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: prometheus-k8s
        port:
          number: 9092
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: grafana
  namespace: monitoring
spec:
  gateways:
  - kube-prometheus
  hosts:
  - grafana.{{ public_domain }}
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: grafana
        port:
          number: 3000
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  gateways:
  - kube-prometheus
  hosts:
  - alertmanager.{{ public_domain }}
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: alertmanager-main
        port:
          number: 9093
---
{% endif %}