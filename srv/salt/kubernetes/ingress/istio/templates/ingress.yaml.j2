{%- set public_domain = pillar['public-domain'] -%}
{%- from "kubernetes/map.jinja" import common with context -%}
{%- if common.addons.get('nginx', {'enabled': False}).enabled %}
  {%- set controller = "nginx" -%}
{%- elif common.addons.get('traefik', {'enabled': False}).enabled %}
  {%- set controller = "traefik" -%}
{%- elif common.addons.get('istio', {'enabled': False}).enabled %}
  {%- set controller = "istio" -%}
{%- endif -%}


apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: istio-tracing
  namespace: istio-system
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
spec:
  rules:
  - host: istio-tracing.{{ public_domain }}
    http:
      paths:
      - path: /*
        backend:
          serviceName: jaeger-query
          servicePort: 16686
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: istio-servicegraph
  namespace: istio-system
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
spec:
  rules:
  - host: istio-servicegraph.{{ public_domain }}
    http:
      paths:
      - path: /*
        backend:
          serviceName: servicegraph
          servicePort: 8088
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: istio-telemetry
  namespace: istio-system
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
spec:
  rules:
  - host: istio-telemetry.{{ public_domain }}
    http:
      paths:
      - path: /*
        backend:
          serviceName: istio-telemetry
          servicePort: 9093
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: istio-prometheus
  namespace: istio-system
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
spec:
  rules:
  - host: istio-prometheus.{{ public_domain }}
    http:
      paths:
      - path: /*
        backend:
          serviceName: prometheus
          servicePort: 9090
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: istio-grafana
  namespace: istio-system
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
spec:
  rules:
  - host: istio-grafana.{{ public_domain }}
    http:
      paths:
      - path: /*
        backend:
          serviceName: grafana
          servicePort: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: istio-kiali
  namespace: istio-system
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
spec:
  rules:
  - host: istio-kiali.{{ public_domain }}
    http:
      paths:
      - path: /*
        backend:
          serviceName: kiali
          servicePort: 20001
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: bookinfo
  namespace: bookinfo
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
spec:
  rules:
  - host: bookinfo.{{ public_domain }}
    http:
      paths:
      - path: /*
        backend:
          serviceName: productpage
          servicePort: 9080
---