{%- from "kubernetes/map.jinja" import common with context -%}
{%- from "kubernetes/map.jinja" import master with context -%}

{%- set hostname = salt['grains.get']('fqdn') -%}

[Unit]
[Unit]
Description=Kubernetes Kubelet
Documentation=https://github.com/kubernetes/kubernetes
Documentation=https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet
After={{ common.cri.provider }}.service
Requires={{ common.cri.provider }}.service

[Service]
ExecStart=/usr/local/bin/kubelet \
  --allow-privileged=true \
  --config=/var/lib/kubelet/kubelet-config.yaml \
  {%- if common.cri.provider == "docker" %}
  --container-runtime=docker \
  {%- elif common.cri.provider == "rkt" %}
  --container-runtime=rkt \
  {%- elif common.cri.provider == "containerd" %}
  --container-runtime=remote \
  --container-runtime-endpoint=unix:///run/containerd/containerd.sock \
  {%- endif %}
  --hostname-override={{ hostname }} \
  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \
  --network-plugin=cni \
  --node-labels="kubernetes.io/role=master,beta.kubernetes.io/fluentd-ds-ready=true" \
  --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \  
  {%- if "18.04" in salt['grains.get']('osrelease') %}
  --resolv-conf=/run/systemd/resolve/resolv.conf \
  {%- endif %}
  --volume-plugin-dir=/var/lib/kubelet/volumeplugins \
  --v=2

Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target