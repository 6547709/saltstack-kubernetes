{%- from "kubernetes/map.jinja" import common with context -%}
{%- from "kubernetes/map.jinja" import master with context -%}

apiVersion: v1
kind: Pod
metadata:
  name: kube-controller-manager
  namespace: kube-system
  labels:
    k8s-app: kube-controller-manager
spec:
  containers:
  - name: kube-controller-manager
    image: {{ common.image }}
    command:
    - /hyperkube
    - controller-manager
    - --address=0.0.0.0
    - --cluster-cidr={{ common.cni.network }}
    - --allocate-node-cidrs=true
    - --cluster-name=kubernetes
    - --cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem
    - --cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem
    - --feature-gates=RotateKubeletServerCertificate=true
    - --flex-volume-plugin-dir=/etc/kubernetes/volumeplugins
    - --kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig
    - --leader-elect=true
    - --node-monitor-grace-period=40s
    - --node-monitor-period=5s
    - --pod-eviction-timeout=5m0s
    - --root-ca-file=/etc/kubernetes/ssl/ca.pem
    - --service-account-private-key-file=/etc/kubernetes/ssl/service-account-key.pem
    - --service-cluster-ip-range={{ master.service_addresses }}
    - --use-service-account-credentials=true
    - --v=2
    resources:
      requests:
        cpu: 200m
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10252
      initialDelaySeconds: 15
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
    - mountPath: /etc/kubernetes/volumeplugins
      name: volumeplugins-host
      readonly: false
    - mountPath: /etc/kubernetes
      name: config-kubernetes
      readOnly: true
  hostNetwork: true
  volumes:
  - hostPath:
      path: /etc/kubernetes
    name: config-kubernetes
  - hostPath:
      path: /etc/kubernetes/ssl
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
  - hostPath:
      path: /etc/kubernetes/volumeplugins
    name: volumeplugins-host
---
apiVersion: v1
kind: Service
metadata:
  name: kube-controller-manager
  namespace: kube-system
  annotations:
    prometheus.io/port: "10252"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: kube-controller-manager
spec:
  selector:
    k8s-app: kube-controller-manager
  clusterIP: None
  ports:
  - name: http-metrics
    port: 10252
    protocol: TCP