# -*- coding: utf-8 -*-
# vim: ft=jinja

{#- Get the `tplroot` from `tpldir` #}
{% from tpldir ~ "/map.jinja" import ory with context %}
{%- set public_domain = pillar['public-domain'] -%}
{%- from "kubernetes/map.jinja" import common with context -%}
{%- if common.addons.get('nginx', {'enabled': False}).enabled  %}
  {%- set controller = "nginx" -%}
{%- elif common.addons.get('traefik', {'enabled': False}).enabled %}
  {%- set controller = "traefik" -%}
{%- elif common.addons.get('istio', {'enabled': False}).enabled %}
  {%- set controller = "istio" -%}
{%- elif common.addons.get('contour', {'enabled': False}).enabled %}
  {%- set controller = "contour" -%}
{%- endif -%}

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: hydra-idp
  namespace: ory
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
    {%- if common.addons.get('nginx', {'enabled': False}).enabled  or common.addons.get('contour', {'enabled': False}).enabled %}
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    {%- endif %}
spec:
  rules:
  - host: {{ ory.hydra.ingress_host }}.{{ public_domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: hydra-idp-example-idp
          servicePort: 3000
  {%- if common.addons.get('nginx', {'enabled': False}).enabled  or common.addons.get('contour', {'enabled': False}).enabled %}
  tls:
  - secretName: hydra-idp-prod-cert
    hosts:
    - {{ ory.hydra.ingress_host }}.{{ public_domain }}
  {%- endif %}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: hydra-public
  namespace: ory
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
    {%- if common.addons.get('nginx', {'enabled': False}).enabled  or common.addons.get('contour', {'enabled': False}).enabled %}
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    {%- endif %}
spec:
  rules:
  - host: {{ ory.hydra.ingress_host }}-public.{{ public_domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: hydra-public
          servicePort: 4444
  {%- if common.addons.get('nginx', {'enabled': False}).enabled  or common.addons.get('contour', {'enabled': False}).enabled %}
  tls:
  - secretName: hydra-public-prod-cert
    hosts:
    - {{ ory.hydra.ingress_host }}-public.{{ public_domain }}
  {%- endif %}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: hydra-admin
  namespace: ory
  annotations:
    kubernetes.io/ingress.class: {{ controller }}
    {%- if common.addons.get('nginx', {'enabled': False}).enabled  or common.addons.get('contour', {'enabled': False}).enabled %}
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    {%- endif %}
spec:
  rules:
  - host: {{ ory.hydra.ingress_host }}-admin.{{ public_domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: hydra-admin
          servicePort: 4445
  {%- if common.addons.get('nginx', {'enabled': False}).enabled  or common.addons.get('contour', {'enabled': False}).enabled %}
  tls:
  - secretName: hydra-admin-prod-cert
    hosts:
    - {{ ory.hydra.ingress_host }}-admin.{{ public_domain }}
  {%- endif %}

