{%- set public_domain = pillar['public-domain'] -%}
{%- set acme_email = pillar['acme-email'] -%}

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-conf
  namespace: kube-system
data:
  traefik.toml: |
    # traefik.toml
    defaultEntryPoints = ["http","https"]
    [entryPoints]
      [entryPoints.http]
      address = ":80"
      #[entryPoints.http.redirect]
      #entryPoint = "https"
      [entryPoints.https.auth.basic]
      users = ["admin:$apr1$mHqffeCI$8Bl8/cCsjejRsAYt7qFrj/"]
      [entryPoints.https]
      address = ":443"
        [entryPoints.https.tls]
    [acme]
    email = "{{ acme_email }}"
    storageFile = "/acme/acme.json"
    entryPoint = "https"
    onDemand = true
    onHostRule = true
    caServer = "https://acme-staging.api.letsencrypt.org/directory"
      [acme.httpChallenge]
      entryPoint = "http"
     # [[acme.domains]]
     # main = "{{ public_domain }}"

---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik
        name: traefik-ingress-lb
        args:
        - --configfile=/config/traefik.toml
        - --web
        - --kubernetes
        volumeMounts:
        - mountPath: "/config"
          name: "config"
        - mountPath: "/acme/acme.json"
          name: "acme"
      volumes:
      - name: config
        configMap:
          name: traefik-conf
      - name: acme
        hostPath:
           path: /srv/kubernetes/acme.json
      nodeSelector:
        node-role.kubernetes.io/ingress: "true"
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
  - nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 80
    name: http
  - nodePort: 30443
    port: 443
    protocol: TCP
    targetPort: 443
    name: https
  - nodePort: 38080
    port: 8080
    protocol: TCP
    targetPort: 8080
    name: admin
  - nodePort: 38443
    port: 8443
    protocol: TCP
    targetPort: 8443
    name: https-admin
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-web-ui
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-web-ui
  namespace: kube-system
spec:
  rules:
  - host: traefik-ui.{{ public_domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: traefik-web-ui
          servicePort: http
