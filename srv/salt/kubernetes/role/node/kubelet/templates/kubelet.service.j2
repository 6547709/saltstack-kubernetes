{%- from "kubernetes/map.jinja" import common with context -%}
{%- from "kubernetes/map.jinja" import master with context -%}
{%- set hostname = salt['grains.get']('fqdn') -%}
{%- set role = salt['grains.get']('role') -%}
{% if role == "proxy" %}
  {%- set node_labels = ",node-role.kubernetes.io/ingress=true" -%}
{% else %}
  {%- set node_labels = ",role=storage-node" -%}
{% endif %}

[Unit]
Description=Kubernetes Kubelet
Documentation=https://github.com/kubernetes/kubernetes
Documentation=https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet
After={{ common.cri.provider }}.service
Requires={{ common.cri.provider }}.service

[Service]
ExecStart=/usr/local/bin/kubelet \
  --config=/var/lib/kubelet/kubelet-config.yaml \
  {%- if common.cri.provider == "docker" %}
  --container-runtime=docker \
  {%- elif common.cri.provider == "containerd" %}
  --container-runtime=remote \
  --container-runtime-endpoint=unix:///run/containerd/containerd.sock \
  {%- elif common.cri.provider == "crio" %}
  --container-runtime=remote \
  --container-runtime-endpoint=unix:///run/crio/crio.sock \
  {%- endif %}
  --hostname-override={{ hostname }} \
  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \
  --network-plugin=cni \
  --node-labels="kubernetes.io/role=node,beta.kubernetes.io/fluentd-ds-ready=true{{ node_labels }}" \
  --volume-plugin-dir=/usr/libexec/kubernetes/kubelet-plugins/volume/exec \
  --v=2

Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target