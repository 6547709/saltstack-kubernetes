{%- set public_domain = pillar['public-domain'] -%}
{%- from "kubernetes/map.jinja" import common with context -%}
{%- from "kubernetes/map.jinja" import etcd with context -%}
{%- from "kubernetes/map.jinja" import master with context -%}
{%- from "kubernetes/map.jinja" import charts with context -%}

{%- set hostname = salt['grains.get']('fqdn') -%}
{%- set vars     = {'current_ip': "127.0.0.1"} -%}

{%- for member in master.members -%}
  {%- if member.name == hostname -%}
	{%- if vars.update({'current_ip': member.host}) -%}{%- endif -%}
  {%- endif -%}
{%- endfor -%}

[Unit]
Description=Kubernetes API Server
Documentation=https://github.com/kubernetes/kubernetes
Documentation=https://kubernetes.io/docs/admin/kubelet-authentication-authorization

[Service]
ExecStart=/usr/local/bin/kube-apiserver \
    --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota \
    --advertise-address={{ vars.current_ip }} \
    --allow-privileged=true \
    --anonymous-auth=false \
    --apiserver-count={{ master.members|selectattr('host')|list|length }} \
    --audit-log-maxage=30 \
    --audit-log-maxbackup=3 \
    --audit-log-maxsize=100 \
    --audit-log-path=/var/log/kube-audit/audit.log \
    --audit-policy-file=/etc/kubernetes/audit-policy.yaml \
    --authorization-mode=Node,RBAC \
    --bind-address=0.0.0.0 \
    --client-ca-file=/etc/kubernetes/ssl/ca.pem \
    --enable-bootstrap-token-auth \
    --enable-swagger-ui=true \
    --storage-backend=etcd3 \
    --etcd-cafile=/etc/kubernetes/ssl/ca.pem \
    --etcd-certfile=/etc/kubernetes/ssl/apiserver.pem \
    --etcd-keyfile=/etc/kubernetes/ssl/apiserver-key.pem \
    --etcd-servers={% for member in etcd.members %}https://{{ member.host }}:2379{% if not loop.last %},{% endif %}{% endfor %} \
    --event-ttl=1h \
    --experimental-encryption-provider-config=/etc/kubernetes/encryption-config.yaml \
    --insecure-bind-address=127.0.0.1 \
    --kubelet-certificate-authority=/etc/kubernetes/ssl/ca.pem \
    --kubelet-client-certificate=/etc/kubernetes/ssl/apiserver.pem \
    --kubelet-client-key=/etc/kubernetes/ssl/apiserver-key.pem \
    --kubelet-https=true \
    --requestheader-client-ca-file=/etc/kubernetes/ssl/kube-aggregator-ca.pem \
    --requestheader-allowed-names=kube-aggregator-client \
    --requestheader-extra-headers-prefix=X-Remote-Extra- \
    --requestheader-group-headers=X-Remote-Group \
    --requestheader-username-headers=X-Remote-User \
    --proxy-client-cert-file=/etc/kubernetes/ssl/kube-aggregator-client.pem \
    --proxy-client-key-file=/etc/kubernetes/ssl/kube-aggregator-ca-key.pem \
    --runtime-config=api/all \
    --runtime-config=extensions/v1beta1/networkpolicies=true \
    --service-account-key-file=/etc/kubernetes/ssl/service-account.pem \
    --service-cluster-ip-range={{ master.service_addresses }} \
    --service-node-port-range=30000-50000 \
    --storage-media-type=application/json \
    --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem \
    --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem \
    --token-auth-file=/etc/kubernetes/token.csv \
    {%- if charts.get('keycloak', {'enabled': False}).enabled %}
    --oidc-client-id=kubernetes \
    --oidc-groups-claim=groups \
    --oidc-issuer-url=https://{{ charts.keycloak.ingress_host }}.{{ public_domain }}/auth/realms/default \
    {%- endif %}
    --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target