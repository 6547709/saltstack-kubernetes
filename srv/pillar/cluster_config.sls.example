public-domain: example.com

kubernetes:
  common:
    image: gcr.io/google_containers/hyperkube:v1.15.5
    version: v1.15.5
    cri:
      provider: docker
      crictl_version: 1.15.0
      runc_version: 1.0.0-rc8
      docker:
        version: 18.09.8
        data_dir: /var/lib/docker
      rkt:
        version: 1.30.0
      containerd:
        version: 1.2.6
        source_hash: 3c23bc34c7c0cb2e45fe469f5fcfdb3829aab8e51a425b1efb702f00f215c4c6
      crio:
        version: 1.15
    cni:
      source: https://github.com/containernetworking/plugins/releases/download/v0.8.2/cni-plugins-linux-amd64-v0.8.2.tgz
      source_hash: 21283754ffb953329388b5a3c52cef7d656d535292bda2d86fcdda604b482f85
      network: 10.244.0.0/16
      provider: calico
      calico:
        node_image: quay.io/calico/node:v3.10.0
        typha_image: quay.io/calico/typha:v3.10.0
        cni_image: quay.io/calico/cni:v3.10.0
        controller_image: quay.io/calico/kube-controllers:v3.10.0
        flexvol_image: calico/pod2daemon-flexvol:v3.10.0
        version: 3.10.0
        mtu: 1430
        ipv4:
          range: 10.244.0.0/16
          nat: true
          ip_in_ip: always
          interface: ens10
        ipv6:
          enable: false
          nat: true
          interface: ens10
          range: fd80:24e2:f998:72d6::/64
      flannel:
        flannel_image: quay.io/coreos/flannel:v0.11.0-amd64
        interface: ens10
      weave:
        weave_image: weaveworks/weave-kube:2.5.2
        npc_image: weaveworks/weave-npc:2.5.2
        password: 1234567890abcdefghij
      canal:
        node_image: quay.io/calico/node:v3.2.1
        cni_image: quay.io/calico/cni:v3.2.1
        flannel_image: quay.io/coreos/flannel:v0.9.1
        interface: ens10
      cilium:
        cilium_image: docker.io/cilium/cilium:v1.3.2
    addons:
      dns:
        enabled: True
        domain: cluster.local
        server: 10.96.0.10
        autoscaler:
          enabled: True
        coredns:
          enabled: True
          image: coredns/coredns:1.3.1
      helm:
        enabled: true
        tiller_image: gcr.io/kubernetes-helm/tiller:v2.16.0
        version: 2.16.0
        source_hash: c4d3eadeb46230430304511166a404cb412ff0dc7ff0999e5b50d18a465c565f
      kube_prometheus:
        enabled: True
        version: 0.2.0
        prometheus_ingress_host: prometheus
        alertmanager_ingress_host: alertmanager
        grafana_ingress_host: grafana
      heapster-influxdb:
        enabled: True
      dashboard:
        enabled: True
        dashboard_image: kubernetesui/dashboard:v2.0.0-beta5
        scraper_image: kubernetesui/metrics-scraper:v1.0.2
        ingress_host: kubernetes-dashboard
      traefik:
        enabled: False
        password: '$$apr1$$u7.rXtVi$$DQtLfP6lJJZqvENhyo6EX1'
        acme_email: user@example.com
      npd:
        enabled: True
        image: k8s.gcr.io/node-problem-detector:v0.6.2
      nginx:
        enabled: true
      istio:
        enabled: True
        version: 1.3.4
        tracing: jaeger
        prometheus_ingress_host: istio-prometheus
        tracing_ingress_host: istio-tracing
        telemetry_ingress_host: istio-telemetry
        grafana_ingress_host: istio-grafana
        kiali_ingress_host: istio-kiali
        bookinfo_ingress_host: bookinfo
        source_hash: fb9df09f492440190a28873e9164b8e17303a3825e3f732024af48a3a5cd665c
      cert_manager:
        enabled: True
        version: 0.11.0
        acme_email: user@example.com
        dns:
          provider: cloudflare
          email: admin@example.com
          secret: 012345abcde012345abcde012345abcde012345abcde
      fluentd-elasticsearch:
        enabled: True
      weave_scope:
        enabled: True
        image: docker.io/weaveworks/scope:1.11.6
        ingress_host: scope
      kubeless:
        enabled: True
        version: 1.0.4
        ui_version: master
        ingress_host: kubeless
      knative:
        enabled: False
        version: 0.1.1
      httpbin:
        enabled: True
        ingress_host: httpbin
      metallb:
        enabled: True
  etcd:
    host: 127.0.0.1
    members:
      - host: 172.17.4.51
        name: etcd01
      - host: 172.17.4.52
        name: etcd02
      - host: 172.17.4.53
        name: etcd03
    version: v3.3.15
  master:
    service_addresses: 10.96.0.0/12
    members:
      - host: 172.17.4.101
        name: master01
      - host: 172.17.4.102
        name: master02
      - host: 172.17.4.103
        name: master03
    encryption_key: '9mmDipLv1QEjSzmNia/KyTl79aq6gCMWmqBsyk4P2Lc='
    token:
      admin: 3acb77307c903c780f341d5f0ae4a3b3
      kubelet: 56c5903a3cd445c5dfc302e4674ccc1a
      calico: 0b6c09902d7478220746cfe5605b9ef2
      kube_scheduler: fea3115c71d7fb87fd078978601474d7
      kube_controller_manager: 167945c664a88280d640ac45ff743ddb
      kube_proxy: 3606ab299c3e5ce37e834058eb7618fb
      bootstrap: 0d3bdadc181bdc504481195206314386
      monitoring: af41e9fef61d6a253152d53c9d9decc2
      logging: 45ceb5b4a0a82177aaadfcdabd51786f
      dns: a219bb8d953055339fde377a6ba6dd7c
    storage:
      rook_ceph:
        enabled: True
        image: rook/ceph:v1.1.6
        ceph_image: ceph/ceph:v14.2.4-20190917
        ingress_host: ceph
      rook_minio:
        enabled: True
        image: rook/minio:v1.1.6
        username: Ch4ng3M3
        password: Ch4ng3M34ls0
        ingress_host: minio
      rook_edgefs:
        enabled: False
        image: rook/edgefs:1.1.6
        edgefs_image: edgefs/edgefs:1.2.86
        ingress_host: edgefs
  charts:
    concourse:
      enabled: true
      db_password: Ch4ng3M34ls0
      version: 4.2.1
      source_hash: 7b0805adfba328d09cfa7ac377777cb6e270d66f
      ingress_host: concourse
    keycloak:
      enabled: True
      version: 7.0.0
      db_size: 8Gi
      admin_password: Ch4ng3M3
      db_password: Ch4ng3M34ls0
      ingress_host: keycloak
    mailhog:
      enabled: True
      ingress_host: mail-relay
    spinnaker:
      enabled: True
      version: 1.17.0
      halyard_version: 1.26.0
      ingress_host: spinnaker
      github:
        enabled: True
        token: 0123456789abcdefghij0123456789abcdefghij
      oauth:
        provider: keycloak
        keycloak:
          realm: default
    harbor:
      enabled: true
      version: 1.2.1
      admin_password: Ch4ng3M3
      secretkey: 2Ds7hlY9VHyKAcNd
      database_password: Ch4ng3M34ls0
      ingress:
        enabled: False
      core_ingress_host: registry
      notary_ingress_host: notary
      bucket: harbor
    vistio:
      enabled: true
      version: 0.1.3
      ingress_host: vistio
    ethereum:
      enabled: true
      version: 1.8.19
      address: "0xDd7bC23204b6f4529D91ba79c185984ADcf12CbD"
      private_key: "92c69eb5fdae8af5ed2cffbf9eb5e40d30aa646db354338f7b7841038aa61c9e"
      secret: "some_random_secret"
      ingress_host: blockchain
    keycloak_gatekeeper:
      enabled: true
      version: "master"
      realm: "default"
      groups:
        - "kubernetes-admins,cluster-admin"
        - "kubernetes-users,view"
tinyproxy:
  User: tinyproxy
  Group: tinyproxy
  config: /etc/tinyproxy/tinyproxy.conf
  MaxClients: 200
  MinSpareServers: 10
  MaxSpareServers: 40
  StartServers: 20
  Allow:
    - 127.0.0.1
    - 192.168.0.0/16
    - 172.16.0.0/12
    - 10.0.0.0/8
  ConnectPort:
    - 443
    - 563
    - 6443
    - 2379
    - 2380
keepalived:
  global_defs:
    router_id: LVS_DEVEL
  vrrp_instance:
    VI_1:
      state: MASTER
      interface: wg0
      virtual_router_id: 51
      priority: 100
      advert_int: 1
      authentication:
        auth_type: PASS
        auth_pass: 1111
      virtual_ipaddress:
        - 172.17.4.253
        - 172.17.4.254
  virtual_server:
    0.0.0.0 6443:
      delay_loop: 6
      lb_algo: rr
      lb_kind: NAT
      nat_mask: 255.255.255.0
      persistence_timeout: 50
      protocol: TCP
      real_server:
        172.17.4.101 6443:
          weight: 1
        172.17.4.102 6443:
          weight: 2
        172.17.4.103 6443:
          weight: 3
haproxy:
  enabled: true
  overwrite: True
  defaults:
    timeouts:
      - tunnel        3600s
      - http-request    10s
      - queue           1m
      - connect         10s
      - client          1m
      - server          1m
      - http-keep-alive 10s
      - check 10s
    stats:
      - enable
      - uri: 'admin?stats'
  listens:
    stats:
      bind:
        - "0.0.0.0:58080"
      mode: http
      stats:
        enable: True
        uri: "/admin?stats"
  global:
    ssl-default-bind-ciphers: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384"
    ssl-default-bind-options: "no-sslv3 no-tlsv10 no-tlsv11"
  user: haproxy
  group: haproxy
  chroot:
    enable: true
    path: /var/lib/haproxy
  daemon: true
  frontends:
    kubernetes-master:
      bind: "*:6443"
      mode: tcp
      default_backend: kube-apiserver
  backends:
    kube-apiserver:
      mode: tcp
      balance: source
      sticktable: "type binary len 32 size 30k expire 30m"
      servers:
        master01:
          host: 172.17.4.101
          port: 6443
          check: check
        master02:
          host: 172.17.4.102
          port: 6443
          check: check
        master03:
          host: 172.17.4.103
          port: 6443
          check: check