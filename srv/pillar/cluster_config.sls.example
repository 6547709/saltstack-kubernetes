cluster-host: kubernetes
public-domain: example.com

controlPlaneInterface: wg0

kubeadm:
  kubernetesVersion: 1.16.3
  # kubeadm token generate
  token: ockpvc.dsmk8rtibt1gr72y
  nodeToken: 4bidtp.y7q8hlsvfro0ech1
  # kubeadm alpha certs certificate-key
  certificateKey: 127a3baac30e6891987e6e20774da9f3334500c1e61cc688604513c116ce1831

  networking:
    serviceSubnet: "10.96.0.0/12"
    podSubnet: "10.244.0.0/16"

kubernetes:
  common:
    image: gcr.io/google_containers/hyperkube:v1.16.3
    version: v1.16.3
    cri:
      provider: docker
      crictl_version: 1.15.0
      runc_version: 1.0.0-rc8
      docker:
        version: 18.06.3
        data_dir: /var/lib/docker
      containerd:
        version: 1.2.6
        source_hash: 3c23bc34c7c0cb2e45fe469f5fcfdb3829aab8e51a425b1efb702f00f215c4c6
      crio:
        version: 1.15
    cni:
      source: https://github.com/containernetworking/plugins/releases/download/v0.8.2/cni-plugins-linux-amd64-v0.8.2.tgz
      source_hash: 21283754ffb953329388b5a3c52cef7d656d535292bda2d86fcdda604b482f85
      network: 10.244.0.0/16
      provider: calico
      calico:
        mtu: 1430
        ipv4:
          interface: ens10
        ipv6:
          enable: false
          interface: ens10
      flannel:
        flannel_image: quay.io/coreos/flannel:v0.11.0-amd64
        interface: ens10
      weave:
        weave_image: weaveworks/weave-kube:2.5.2
        npc_image: weaveworks/weave-npc:2.5.2
        password: 1234567890abcdefghij
      cilium:
        cilium_image: docker.io/cilium/cilium:v1.3.2
    addons:
      dns:
        enabled: True
        domain: cluster.local
        server: 10.96.0.10
        autoscaler:
          enabled: True
        coredns:
          enabled: True
          image: coredns/coredns:1.6.5
      helm:
        enabled: true
        version: 3.0.3
        source_hash: fc75d62bafec2c3addc87b715ce2512820375ab812e6647dc724123b616586d6
      kube_prometheus:
        enabled: True
        version: 0.3.0
        prometheus_ingress_host: prometheus
        alertmanager_ingress_host: alertmanager
        grafana_ingress_host: grafana
      heapster_influxdb:
        enabled: False
      metrics_server:
        enabled: true
        image: k8s.gcr.io/metrics-server-amd64:v0.3.6
      dashboard:
        enabled: True
        ingress_host: kubernetes-dashboard
      traefik:
        enabled: False
        password: '$$apr1$$u7.rXtVi$$DQtLfP6lJJZqvENhyo6EX1'
        acme_email: user@example.com
      node_problem_detector:
        enabled: True
      nginx:
        enabled: true
      istio:
        enabled: True
        version: 1.4.2
        tracing: jaeger
        prometheus_ingress_host: istio-prometheus
        tracing_ingress_host: istio-tracing
        telemetry_ingress_host: istio-telemetry
        grafana_ingress_host: istio-grafana
        kiali_ingress_host: istio-kiali
        bookinfo_ingress_host: bookinfo
        source_hash: 8d2adfa1524a89d0263b7feadf6541b6427a8aecf8aa930f0e5eeb796661dd7b
      cert_manager:
        enabled: True
        version: 0.13.0
        acme_email: user@example.com
        dns:
          provider: cloudflare
          email: admin@example.com
          secret: 012345abcde012345abcde012345abcde012345abcde
      fluentd_elasticsearch:
        enabled: True
      weave_scope:
        enabled: True
        ingress_host: scope
      kubeless:
        enabled: True
        version: 1.0.5
        ui_version: master
        ingress_host: kubeless
        nats_trigger_image: docker.io/kubeless/nats-trigger-controller:v1.0.0
        nats_url: nats://nats-cluster.nats-io:4222
        kafka_trigger_image: docker.io/kubeless/kafka-trigger-controller:v1.0.2
        kafka_image: docker.io/bitnami/kafka:1.1.0-r0
        kinesis_trigger_image: docker.io/kubeless/kinesis-trigger-controller:v1.0.0
        zookeeper_image: docker.io/bitnami/zookeeper:3.4.10-r12
      nats_operator:
        enabled: True
        image: docker.io/connecteverything/nats-operator:0.6.2
        stan_image: docker.io/synadia/nats-streaming-operator:v0.3.0-v1alpha1
        nats_cluster_version: 2.1.4 
        stan_cluster_image: docker.io/amd64/nats-streaming:0.16.2-linux
      knative:
        enabled: False
        version: 0.1.1
      httpbin:
        enabled: True
        ingress_host: httpbin
      metallb:
        enabled: True
        version: 0.8.3
      minio_operator:
        enabled: True
        minio_image: docker.io/minio/minio:RELEASE.2020-01-03T19-12-21Z
      descheduler:
        enabled: True
        image: docker.io/fjudith/descheduler:v0.10.0
  etcd:
    host: 127.0.0.1
    members:
      - host: 172.17.4.51
        name: etcd01
      - host: 172.17.4.52
        name: etcd02
      - host: 172.17.4.53
        name: etcd03
    version: v3.3.15
  storage:
    rook_ceph:
      enabled: True
      image: rook/ceph:v1.2.4
      ceph_image: ceph/ceph:v14.2.6
      ingress_host: ceph
    rook_edgefs:
      enabled: False
      image: rook/edgefs:1.1.8
      edgefs_image: edgefs/edgefs:1.2.86
      ingress_host: edgefs
  charts:
    concourse:
      enabled: true
      username: concourse
      password: C0nC0urs3
      db_password: V3ry1ns3sur3P4ssw0rd
      db_size: 8Gi
      version: 5.7.1
      source_hash: ca942b23bb09c434fcdfd7358a7997972ff6c1f5
      ingress_host: concourse
      oauth:
        provider: keycloak
        keycloak:
          realm: default
      s3:
        accesskey: concourse
        secretkey: C0nc0ur53P4ssw0rd
        bucket: concourse
    keycloak:
      enabled: True
      password: V3ry1ns3sur3P4ssw0rd
      db_size: 8Gi
      ingress_host: keycloak
    mailhog:
      enabled: True
      ingress_host: mailhog
    spinnaker:
      enabled: True
      ingress_host: spinnaker
      github:
        enabled: True
        token: 0123456789abcdefghij0123456789abcdefghij
      s3:
        accesskey: spinnaker
        secretkey: Sp1nn4k3rS3cr3tK3y
        bucket: spinnaker
      oauth:
        provider: keycloak
        keycloak:
          realm: default
      concourse:
        username: spinnaker
        password: 1nt3gr4t1on
    harbor:
      enabled: true
      admin_password: Ch4ng3M3
      secretkey: 2Ds7hlY9VHyKAcNd
      database_password: Ch4ng3M34ls0
      coreIngressHost: harbor
      notaryIngressHost: notary
      s3:
        accesskey: harbor
        secretkey: Ch4ng3M34ls0
        bucket: harbor
      oauth:
        provider: keycloak
        keycloak:
          realm: default
    vistio:
      enabled: true
      ingress_host: vistio
    ethereum:
      enabled: true
      version: 1.8.19
      address: "0xDd7bC23204b6f4529D91ba79c185984ADcf12CbD"
      private_key: "92c69eb5fdae8af5ed2cffbf9eb5e40d30aa646db354338f7b7841038aa61c9e"
      secret: "some_random_secret"
      ingress_host: blockchain
    keycloak_gatekeeper:
      enabled: true
      version: "master"
      realm: "default"
      groups:
        - "kubernetes-admins,cluster-admin"
        - "kubernetes-users,view"
    proxyinjector:
      enabled: True
      ingress_host: demo
      oauth:
        provider: keycloak
        keycloak:
          realm: default
    openfaas:
      enabled: true
      ingress_host: openfaas
      username: admin
      password: V3ry1ns3cur3
tinyproxy:
  User: tinyproxy
  Group: tinyproxy
  config: /etc/tinyproxy/tinyproxy.conf
  MaxClients: 200
  MinSpareServers: 10
  MaxSpareServers: 40
  StartServers: 20
  Allow:
    - 127.0.0.1
    - 192.168.0.0/16
    - 172.16.0.0/12
    - 10.0.0.0/8
  ConnectPort:
    - 443
    - 563
    - 6443
    - 2379
    - 2380
keepalived:
  global_defs:
    router_id: LVS_DEVEL
  vrrp_instance:
    VI_1:
      state: MASTER
      interface: wg0
      virtual_router_id: 51
      priority: 100
      advert_int: 1
      authentication:
        auth_type: PASS
        auth_pass: 1111
      virtual_ipaddress:
        - 172.17.4.253
        - 172.17.4.254
  virtual_server:
    0.0.0.0 6443:
      delay_loop: 6
      lb_algo: rr
      lb_kind: NAT
      nat_mask: 255.255.255.0
      persistence_timeout: 50
      protocol: TCP
      real_server:
        172.17.4.101 6443:
          weight: 1
        172.17.4.102 6443:
          weight: 2
        172.17.4.103 6443:
          weight: 3
haproxy:
  enabled: true
  overwrite: True
  defaults:
    timeouts:
      - tunnel        3600s
      - http-request    10s
      - queue           1m
      - connect         10s
      - client          1m
      - server          1m
      - http-keep-alive 10s
      - check 10s
    stats:
      - enable
      - uri: 'admin?stats'
  listens:
    stats:
      bind:
        - "0.0.0.0:58080"
      mode: http
      stats:
        enable: True
        uri: "/admin?stats"
  global:
    ssl-default-bind-ciphers: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384"
    ssl-default-bind-options: "no-sslv3 no-tlsv10 no-tlsv11"
  user: haproxy
  group: haproxy
  chroot:
    enable: true
    path: /var/lib/haproxy
  daemon: true
  frontends:
    kubernetes-master:
      bind: "*:6443"
      mode: tcp
      default_backend: kube-apiserver
  backends:
    kube-apiserver:
      mode: tcp
      balance: source
      sticktable: "type binary len 32 size 30k expire 30m"
      servers:
        master01:
          host: 172.17.4.101
          port: 6443
          check: check
        master02:
          host: 172.17.4.102
          port: 6443
          check: check
        master03:
          host: 172.17.4.103
          port: 6443
          check: check
